---
export interface Props {
	title: string;
	body: string;
}

const { title, body } = Astro.props;
---

<li class="link-card lg:">
	<div
		class="link-card-image"
		style="background-image: url('https://source.unsplash.com/random/800x450?twitter')"
	>
	</div>
	<div class="p-4 flex-1">
		<h2 class="text-lg font-bold text-gray-800 mb-2">{title}</h2>
		<p class="text-gray-600">
			{body}
		</p>
	</div>
</li>

<style>
	.link-card {
		width: 100%;
		max-width: 360px;

		list-style: none;
		display: flex;
		padding: 0.25rem;
		background-color: white;
		background-image: none;
		background-size: 400%;
		border-radius: 0.6rem;
		background-position: 100%;
		transition: transform 330ms ease-in-out;
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
			0 2px 4px -2px rgba(0, 0, 0, 0.1);
	}

	@media (min-width: 640px) {
		.link-card {
			width: calc(50% - 1rem);
		}
	}
	@media (min-width: 768px) {
		.link-card {
			width: calc(33.33% - 1rem);
		}	
	}

	.link-card:hover {
		transform: scale(1.05);
		box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
	}

	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: 1rem 1.3rem;
		border-radius: 0.35rem;
		color: #111;
		background-color: white;
		opacity: 0.8;
	}

	/* .link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	} */
</style>
